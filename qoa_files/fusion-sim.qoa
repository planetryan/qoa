; ==============================================
; I have yet to extend the ISA for this, but ive created a syntax of what it *should* be like
; For now, Ive also made a 0.2.0 version of the fusion sim
; QOA 0.3.0? Proton Proton Tunneling + Fusion Rate Implementation
; ==============================================

; --- Allocate qubits/registers ---
QINIT 0                ; qubit 0: proton A wavefunction
QINIT 1                ; qubit 1: proton B wavefunction
QINIT 2                ; qubit 2: barrier site
QINIT 3                ; qubit 3: fused‐state marker
REGSET 0 0.0           ; reg 0: sampled energy E
REGSET 1 0.0           ; reg 1: WKB tunneling prob P_tunnel
REGSET 2 0             ; reg 2: fusion count

; --- Loop over many trials to build statistics ---
LOOP 1000

  ; Sample a thermal energy at T = 1.3keV
  THERMAL_AVG 0 1.3e3        ; reg0 ← random E from Maxwell–Boltzmann at 1.3 keV

  ; Compute WKB tunneling probability P = exp(–b / sqrt(E))
  WKB_FACTOR 1 [Z=1,Z=1]     ; reg1 ← GamowFactor(reg0) for two protons

  ; Prepare barrier qubit amplitude based on P
  RZ 2 (pi * (1.0 – reg1))    ; phase‐rotate barrier qubit so amplitude ∝ √P

  ; Spread proton wavefunctions
  QGATE 0 H
  QGATE 1 H

  ; Controlled‐Z: if barrier qubit “allows” tunneling, flip fusion qubit
  QGATE 2 CZ 3               ; qubit2 controls CZ on qubit3
  
  ; Measure fusion outcome
  QMEAS 3                    ; collapse qubit3 to 0/1
  IFGT 3 0 +2                ; if result != 0 (i.e. =1), jump 2 ahead
    JMP +1                   ; else skip increment
  REGADD 2 2 1               ; reg2 += 1 (count a success)

  ; Reset qubits for next trial
  QINIT 0
  QINIT 1
  QINIT 2
  QINIT 3

ENDLOOP

; --- After loop: compute average fusion rate ---
; fusion_rate = reg2 / 1000
REGDIV 1 2 1000.0           ; reg1 ← reg2 / 1000.0

; --- Print results ---
CHARLOAD 0 'F'; “Fusion success rate: ”
CHARLOAD 0 58
CHARLOAD 0 32
PRINTF 1 "%.4f%%"           ; new instr to format and print reg1 as percent
HALT
